<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="DC1LadeTest" xml:space="preserve">
    <value>DC1 Ladetest</value>
  </data>
  <data name="DC1IsoTest" xml:space="preserve">
    <value>DC1 Isolationsprüfung</value>
  </data>
  <data name="DC2LadeTest" xml:space="preserve">
    <value>DC2 Ladetest</value>
  </data>
  <data name="DC2IsoTest" xml:space="preserve">
    <value>DC2 Isolationsprüfung</value>
  </data>
  <data name="notAusTest" xml:space="preserve">
    <value>Notaustest</value>
  </data>
  <data name="tuerKontaktTest" xml:space="preserve">
    <value>Türkontakttest</value>
  </data>
  <data name="m_starten" xml:space="preserve">
    <value>starten</value>
  </data>
  <data name="3m1m" xml:space="preserve">
    <value>3 x 1 Minute</value>
  </data>
  <data name="3m5m" xml:space="preserve">
    <value>3 x 5 Minuten</value>
  </data>
  <data name="m_f_LadePistgesteckt" xml:space="preserve">
    <value>Sind die Ladepistolen Richtig verbunden</value>
  </data>
  <data name="m_testStopt" xml:space="preserve">
    <value>Der Test wurde abgebrochen</value>
  </data>
  <data name="m_bestaetigt" xml:space="preserve">
    <value>Bestätigt</value>
  </data>
  <data name="m_cdsConnected" xml:space="preserve">
    <value>CDS Verbindung ist getrennt</value>
  </data>
  <data name="m_cdsNotConnected" xml:space="preserve">
    <value>Das Programm ist mit dem CDS nitch verbunden. Bitte versuchen Sie die Verbindung zu erreichen und dann starten Sie den Test nochmal.</value>
  </data>
  <data name="m_notausDruecken" xml:space="preserve">
    <value>Bitte betätigen Sie jetzt den Not-Aus am Charger</value>
  </data>
  <data name="m_f_errorFlagsLesen" xml:space="preserve">
    <value>Error Flags kontrollieren</value>
  </data>
  <data name="m_tuerOeffnen" xml:space="preserve">
    <value>Bitte öffnen Sie jetzt die Charger Tür</value>
  </data>
  <data name="m_bestanden" xml:space="preserve">
    <value>bestanden</value>
  </data>
  <data name="m_bestandenNicht" xml:space="preserve">
    <value>nicht bestanden</value>
  </data>
  <data name="m_NotausNormailizieren" xml:space="preserve">
    <value>Bitte setzen Sie den Not-Aus am Charger zurück</value>
  </data>
  <data name="m_f_chargerGruen" xml:space="preserve">
    <value>Wenn der Charger wieder Ladebereit ist, bestätigen Sie Bitte mit Ja.</value>
  </data>
  <data name="m_endet" xml:space="preserve">
    <value>ist beendet</value>
  </data>
  <data name="m_tuerNormalisieren" xml:space="preserve">
    <value>Bitte schließen Sie die Charger Tür</value>
  </data>
  <data name="DC1" xml:space="preserve">
    <value>DC1</value>
  </data>
  <data name="DC2" xml:space="preserve">
    <value>DC2</value>
  </data>
  <data name="m_SpeichernAlsPDF" xml:space="preserve">
    <value>Ladetest-Protokoll speichern unter</value>
  </data>
  <data name="bericht" xml:space="preserve">
    <value>Ladetest-Protokoll</value>
  </data>
  <data name="ergebnis" xml:space="preserve">
    <value>Ergebnis</value>
  </data>
  <data name="mode_automatik" xml:space="preserve">
    <value>Mode: Automatik</value>
  </data>
  <data name="mode_wartung" xml:space="preserve">
    <value>Mode: Wartung</value>
  </data>
  <data name="m_CdsFehler" xml:space="preserve">
    <value>Messequipment hat ein oder mehrere Fehler. Bitte beheben Sie die Fehler und versuchen es nochmal.</value>
  </data>
  <data name="m_PDFerstellt" xml:space="preserve">
    <value>Ladetest-Protokoll wurde erstellt</value>
  </data>
  <data name="m_PDverfugbar" xml:space="preserve">
    <value>Ladetest-Protokoll kann erstellt werden</value>
  </data>
  <data name="m_alleTests" xml:space="preserve">
    <value>Gesamtergebnis: </value>
  </data>
  <data name="notaus" xml:space="preserve">
    <value>Notaus</value>
  </data>
  <data name="menuPF_IP" xml:space="preserve">
    <value>Prüffelder IP-Adresse</value>
  </data>
  <data name="menuPF" xml:space="preserve">
    <value>Prüffeld</value>
  </data>
  <data name="auto" xml:space="preserve">
    <value>Automatik</value>
  </data>
  <data name="wartung" xml:space="preserve">
    <value>Wartung</value>
  </data>
  <data name="serienNummer" xml:space="preserve">
    <value>Seriennummer</value>
  </data>
  <data name="einstellungen" xml:space="preserve">
    <value>Einstellungen</value>
  </data>
  <data name="protokollErstellen" xml:space="preserve">
    <value>Ladetest-Protokoll erstellen</value>
  </data>
  <data name="pfWaehlen" xml:space="preserve">
    <value>Prüffeld wählen</value>
  </data>
  <data name="verbindungsStatus" xml:space="preserve">
    <value>Verbindungsstatus</value>
  </data>
  <data name="verbinden" xml:space="preserve">
    <value>Verbinden</value>
  </data>
  <data name="trennen" xml:space="preserve">
    <value>Trennen</value>
  </data>
  <data name="reset" xml:space="preserve">
    <value>Zurücksetzen</value>
  </data>
  <data name="cdsStatus" xml:space="preserve">
    <value>CDS Status</value>
  </data>
  <data name="starten" xml:space="preserve">
    <value>STARTEN</value>
  </data>
  <data name="stoppen" xml:space="preserve">
    <value>STOPPEN</value>
  </data>
  <data name="tests" xml:space="preserve">
    <value>Tests</value>
  </data>
</root>